name: Build Image
on:
  workflow_call:
    inputs:
      actor:
        required: true
        type: string
      repository:
        required: true
        type: string
jobs:
  build-dev-images:
    name: Dev
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io/${{ inputs.repository }}
      TAG: nightly
      API_BASE_URL: ${{ secrets.DEV_API_BASE_URL }}
      SOCKET_URL: ${{ secrets.DEV_SOCKET_URL }}
      SELLER_PORTAL_URL: ${{ secrets.DEV_SELLER_PORTAL_URL }}
      CUSTOMER_PORTAL_URL: ${{ secrets.DEV_CUSTOMER_PORTAL_URL }}
    continue-on-error: true
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: [ customer, admin, seller ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ inputs.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        run: |
          docker compose -f .docker/compose.build.yaml --profile ${{matrix.service}} build
          docker compose -f .docker/compose.build.yaml --profile ${{matrix.service}} push

  build-prod-images:
    name: Prod
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io/${{ inputs.repository }}
      TAG: prod
      API_BASE_URL: ${{ secrets.API_BASE_URL }}
      SOCKET_URL: ${{ secrets.SOCKET_URL }}
      SELLER_PORTAL_URL: ${{ secrets.SELLER_PORTAL_URL }}
      CUSTOMER_PORTAL_URL: ${{ secrets.CUSTOMER_PORTAL_URL }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: [ customer, admin, seller ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ inputs.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        run: |
          docker compose -f .docker/compose.build.yaml --profile ${{matrix.service}} build
          docker compose -f .docker/compose.build.yaml --profile ${{matrix.service}} push
        continue-on-error: true
    
