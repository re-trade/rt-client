name: Deploy to Dev Server

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io/${{ github.repository }}
  API_BASE_URL: ${{ secrets.API_BASE_URL }}

jobs:
  build-images:
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: [customer, admin, seller]
        tag: [nightly, prod]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/rt-client-${{ matrix.service }}:${{ matrix.tag }}
          build-args: |
            API_BASE_URL=${{ env.API_BASE_URL }}
            NODE_ENV=production

  deploy-dev:
    runs-on: retrade-dev
    needs: build-images
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io/${{ github.repository }}
      TAG: nightly
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull nightly images
        run: |
          docker pull $REGISTRY/rt-client-customer:${TAG}
          docker pull $REGISTRY/rt-client-admin:${TAG}
          docker pull $REGISTRY/rt-client-seller:${TAG}

      - name: Clean Container, Image And Prepare For Deploy
        run: docker compose -f .docker/compose.yaml -p retrade-service --profile prod up -d
        continue-on-error: true

      - name: Clean Old Images
        run: docker image prune -a -f
        continue-on-error: true
